@page "/bangdiemSV/hienthi/{idSinhVien}"
@using QLDSVFPOLY.BUS.ViewModels.ChiTietDiemSo
@using QLDSVFPOLY.BUS.ViewModels.ChiTietLopHoc
@using QLDSVFPOLY.BUS.ViewModels.DiemSo
@using QLDSVFPOLY.BUS.ViewModels.KiHoc
@using QLDSVFPOLY.BUS.ViewModels.MonHoc
@using QLDSVFPOLY.BUS.ViewModels.SinhVien
@using QLDSVFPOLY.Blazor.Repository.Interfaces
@using QLDSVFPOLY.Blazor.Components

<h3>BangDiemSinhVienHienThi</h3>

@if (listCTLHs == null
															|| listDiemSos == null
															|| listKiHocs == null
															|| listMonHocs == null
															|| listSinhViens == null
															|| listCTDiemSos == null
												)
{
	<LoadingIndicator></LoadingIndicator>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th scope="col">STT</th>
				<th scope="col">Kì Học</th>
				<th scope="col">Mã Môn Học</th>
				<th scope="col">Tên Môn Học</th>
				<th scope="col">Điểm</th>
				<th scope="col">Chi Tiết</th>
				<th scope="col">Trạng Thái</th>
			</tr>
		</thead>
		<tbody>


			@for (int i = 0; i < listCTLHs.Count(); i++)
			{
				var item = listCTLHs[i];

				Guid id = @listCTDiemSos.FirstOrDefault(c => c.IdChiTietLopHoc == @item.Id).IdDiemSo;
				<tr>
					<th scope="row">@(i+1)</th>
					<td>@listKiHocs.FirstOrDefault(c=>c.Id==@item.IdKiHoc).Ten</td>
					<td>@listMonHocs.FirstOrDefault(c=>c.Id==@item.IdMonHoc).Ma</td>
					<td>@listMonHocs.FirstOrDefault(c=>c.Id==@item.IdMonHoc).Ten</td>
					<td>@Math.Round(@TinhDiem(Guid.Parse(idSinhVien),item.Id),2)</td>
					<td><button type="button" class="btn btn-link" @onclick="()=>NavigationChiTietDiemSo(id,item.Id)">Chi tiết điểm</button></td>
					@if (@item.TrangThai == 1)
					{
						<td>Hoạt động</td>
					}
					else
					{
						<td>Tạm dừng hoạt động</td>
					}
				</tr>
			}
		</tbody>
	</table>
}

@code {
	[Parameter]
	public string idSinhVien { set; get; }

	//MonHoc
	[Inject] private IMonHocRepo monHocRepo { set; get; }
	private List<MonHocVM> listMonHocs;
	private MonHocSearchVM monHocSearchVm = new MonHocSearchVM();

	//KiHoc
	[Inject] private IKiHocRepos kiHocRepo { set; get; }
	private List<KiHocViewmodel> listKiHocs;
	private KiHocSearchViewmodel kiHocSearchVm = new KiHocSearchViewmodel();

	//SinhVien
	[Inject] private ISinhVienRepo sinhVienRepo { set; get; }
	private List<SinhVienVM> listSinhViens;
	private SinhVienSearchVM sinhVienSearchVm = new SinhVienSearchVM();

	//DiemSo
	[Inject] private IDiemSoRepos diemSoRepo { set; get; }
	private List<DiemSoVM> listDiemSos;
	private DiemSoSearchVM diemSoSearchVm = new DiemSoSearchVM();

	//cTDiemSo
	[Inject] private IChiTietDiemSoRepo cTDiemSoRepo { set; get; }
	private List<ChiTietDiemSoVM> listCTDiemSos;
	private ChiTietDiemSoSearchVM cTDiemSoSearchVm = new ChiTietDiemSoSearchVM();

	//ChiTietLopHoc
	[Inject] private IChiTietLopHocRepos CTLHRepo { set; get; }
	private List<ChiTietLopHocVM> listCTLHs;
	private ChiTietLopHocSearchVM searchCTLHVm = new ChiTietLopHocSearchVM();

	[Inject] private NavigationManager navigationManager { get; set; }



	protected override async Task OnInitializedAsync()
	{
		idSinhVien = "710160E5-1760-4B31-B0EF-34481B382215";

		await LoadData();
	}

	private async Task LoadData()
	{
		listMonHocs = await monHocRepo.GetAllActiveAsync(monHocSearchVm);
		listKiHocs = await kiHocRepo.GetAllActiveAsync(kiHocSearchVm);
		listSinhViens = await sinhVienRepo.GetAllActiveAsync(sinhVienSearchVm);
		listDiemSos = await diemSoRepo.GetAllActiveAsync(diemSoSearchVm);

		listCTDiemSos = await cTDiemSoRepo.GetAllActiveAsync(cTDiemSoSearchVm);
		//CTDiemSo cua SV
		listCTDiemSos = listCTDiemSos.Where(c => c.IdSinhVien == Guid.Parse(idSinhVien)).ToList();
		//list IdCTLH
		var listIdCTLH = listCTDiemSos.GroupBy(c => c.IdChiTietLopHoc).Select(x => x.Key).ToList();
		listCTLHs = await CTLHRepo.GetAllActiveAsync(searchCTLHVm);
		listCTLHs = listCTLHs.Where(c => listIdCTLH.Any(x => x == c.Id)).ToList();
		//CTLH cua SV
		//listChuyenNganhs = listChuyenNganhs.Where(c => c.IdDaoTao == Guid.Parse(idDaoTao)).ToList();

	}

	private double TinhDiem(Guid idSV, Guid idCTLopHoc)
	{
		try
		{
			var listDiem = listCTDiemSos.Where(c => c.IdSinhVien == idSV && c.IdChiTietLopHoc == idCTLopHoc).
	Select(c => new { c.Diem, listDiemSos.FirstOrDefault(x => x.Id == c.IdDiemSo).TrongSo }).ToList();

			double diemTB = 0;
			foreach (var i in listDiem)
			{
				diemTB += i.Diem * i.TrongSo / 100;
			}
			return diemTB;
		}
		catch
		{
			return 0;
		}
	}

	//Gọi đến chi tiết chuyên ngành hẹp
	private void NavigationChiTietDiemSo(Guid idSinhVien,Guid idCTLH)
	{
		navigationManager.NavigateTo($"/chitietdiem/{idSinhVien}/{idCTLH}");
	}
}
