@page "/ThongKeThongTinCoSo/{idDaoTao}"
@using QLDSVFPOLY.BUS.ViewModels.ChuyenNganh
@using QLDSVFPOLY.BUS.ViewModels.GiangVien
@using QLDSVFPOLY.BUS.ViewModels.LopHoc
@using QLDSVFPOLY.BUS.ViewModels.SinhVien
@using QLDSVFPOLY.Blazor.Repository.Interfaces
@inject ISessionStorageService _SStorage
<h3>ThongTinCoSo</h3>



@code {

	[CascadingParameter]
	public QLDSVLayout _Layout { get; set; }


	[Parameter]
	public string idDaoTao { set; get; }

	//ChuyenNganh
	[Inject] private IChuyenNganhRepo ChuyenNganhRepo { set; get; }
	private List<ChuyenNganhVM> listChuyenNganhs;
	private ChuyenNganhSearchVM chuyenNganhSearchVm = new ChuyenNganhSearchVM();

	//KiHoc
	[Inject] private ILopHocRepos LopHocRepo { set; get; }
	private List<LopHocVM> listLopHocs;
	private LopHocSearchVM lopHocSearchVm = new LopHocSearchVM();

	//SinhVien
	[Inject] private ISinhVienRepo sinhVienRepo { set; get; }
	private List<SinhVienVM> listSinhViens;
	private SinhVienSearchVM sinhVienSearchVm = new SinhVienSearchVM();
	//GiangVien
	[Inject] private IGiangVienRepos GiangVienRepo { set; get; }
	private List<GiangVienVM> listGiangViens;
	private GiangVienSearchVM giangVienSearchVm = new GiangVienSearchVM();


	protected override async Task OnInitializedAsync()
	{
		idDaoTao = "9d01fb1f-6d12-4b11-9962-871c333e659b";
		await LoadData();
	}

	private async Task LoadData()
	{
		//ChuyenNganh
		listChuyenNganhs = await ChuyenNganhRepo.GetAllActiveAsync(chuyenNganhSearchVm);
		listChuyenNganhs = listChuyenNganhs.Where(c => c.IdDaoTao == Guid.Parse(idDaoTao)).ToList();
		//LopHoc
		listLopHocs = await LopHocRepo.GetAllActiveAsync(lopHocSearchVm);
		listLopHocs = listLopHocs.Where(c => c.IdDaoTao == Guid.Parse(idDaoTao)).ToList();
		//SinhVien
		listSinhViens = await sinhVienRepo.GetAllActiveAsync(sinhVienSearchVm);
		listSinhViens = listSinhViens.Where(c => listChuyenNganhs.Any(x => x.Id == c.IdChuyenNganh)).ToList();
		//GiangVien
		listGiangViens = await GiangVienRepo.GetAllActiveAsync(giangVienSearchVm);
		listGiangViens = listGiangViens.Where(c => c.IdDaoTao == Guid.Parse(idDaoTao)).ToList();

		//Đếm số lượng có trong cơ sở
		int SinhVienCount = listSinhViens.Count();
		int GiangVienCount = listGiangViens.Count();
		int LopHocCount = listLopHocs.Count();
		int ChuyenNganhCount = listChuyenNganhs.Count();

		//Đếm số lượng còn hoạt động ở trong cơ sở
		int SinhVienActiveCount = listSinhViens.Where(x => x.TrangThai == 1).Count();
		int GiangVienActiveCount = listGiangViens.Where(x => x.TrangThai == 1).Count();
		int LopHocActiveCount = listLopHocs.Where(x => x.TrangThai == 1).Count();
		int ChuyenNganhActiveCount = listChuyenNganhs.Where(x => x.TrangThai == 1).Count();

		//Đếm số lượng không hoạt động ở trong cơ sở
		int SinhVienNonAcCount = listSinhViens.Where(x => x.TrangThai == 0).Count();
		int GiangVienNonAcCount = listGiangViens.Where(x => x.TrangThai == 0).Count();
		int LopHocNonAcCount = listLopHocs.Where(x => x.TrangThai == 0).Count();
		int ChuyenNganhNonAcCount = listChuyenNganhs.Where(x => x.TrangThai == 0).Count();

		//Đếm số lượng tạm dừng hoạt động ở trong cơ sở
		int SinhVienDelayCount = listSinhViens.Where(x => x.TrangThai == 2).Count();
		int GiangVienDelayCount = listGiangViens.Where(x => x.TrangThai == 2).Count();
		int LopHocDelayCount = listLopHocs.Where(x => x.TrangThai == 2).Count();
		int ChuyenNganhDelayCount = listChuyenNganhs.Where(x => x.TrangThai == 2).Count();

	}


}
