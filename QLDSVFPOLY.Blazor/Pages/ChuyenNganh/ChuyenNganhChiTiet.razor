@page "/chuyennganh/chitiet/{idChuyenNganh}"
@using QLDSVFPOLY.BUS.ViewModels.ChuyenNganh
@using QLDSVFPOLY.BUS.ViewModels.ChuyenNganhMonHoc
@using QLDSVFPOLY.BUS.ViewModels.SinhVien
@using QLDSVFPOLY.Blazor.Components;
@using QLDSVFPOLY.Blazor.Repository.Interfaces


<style>
	#dd {
		border: 2px black;
		width: 400px;
		height: 300px;
		margin-left: 50px;
	}
</style>

<h1>Chuyên Ngành ???TenChuyenNganh</h1>
@if (updateVm == null)
{
	<LoadingIndicator></LoadingIndicator>
}
else
{
	<EditForm Model="@updateVm">
		<div class="w-25" style="float: left; margin-top:30px">
			<img id="dd" /><br />
			<input multiple="" type="file" _bl_2="" style="margin-top:20px;margin-left:50px">
		</div>
		<div class="w-50" style="float:right;margin-top:20px;">
			<div class="row" style="margin-top:15px">
				<div class="col">
					<label>Mã Chuyên Ngành</label>
					<input type="text" class="form-control" @bind="updateVm.Ma">
				</div>
				<div class="col"></div>
			</div>
			<div class="row" style="margin-top:15px">
				<div class="col">
					<label>Tên Ngành</label>
					<input type="text" class="form-control" @bind="updateVm.TenChuyenNganh">
				</div>
				<div class="col"></div>
			</div>
			<div class="row" style="margin-top:15px">
				<div class="col">
					<label>Trạng Thái</label>
					<select class="form-control" @bind="updateVm.TrangThai">
						<option value="1">Hoạt động</option>
						<option value="2">Tạm dừng hoạt động</option>
					</select>
				</div>
				<div class="col"></div>
			</div>
			<div class="row" style="margin-top:15px">
				<div class="col">
					<button type="button" class="btn btn-primary" style="float:left" @onclick="()=>LoadDataUpdate()">KHÔI PHỤC</button>
					<button type="submit" class="btn btn-primary" style="float:right" @onclick="()=>UpdateCN(Guid.Parse(idChuyenNganh), updateVm)">CHỈNH SỬA</button>
				</div>
				<div class="col"></div>
			</div>
			<div class="row" style="margin-top:15px">
				<div class="col"></div>
				<div class="col"></div>
			</div>
		</div>
		@if (updateVm.IdChuyenNganh == null)
		{
			<div style="clear:both"></div>
			<h1 style="float:left; margin-top:50px;margin-bottom:30px">Danh Sách Chuyên Ngành Hẹp</h1>
			<button style="float:right;margin-top:50px" type="button" class="btn btn-primary" @onclick="()=>NavigationThemMoiCNH()">THÊM CHUYÊN NGÀNH HẸP</button>
		}

	</EditForm>
}

@if (listChuyenNganhHeps == null || listChuyenNganhMonHocs == null)
{
	<LoadingIndicator></LoadingIndicator>
}
else if (updateVm.IdChuyenNganh == null)
{
	<table class="table">
		<thead>
			<tr>
				<th scope="col">STT</th>
				<th scope="col">Tên</th>
				<th scope="col">Tổng số môn học</th>
				<th scope="col">Tổng số sinh viên</th>
				<th scope="col">Chi Tiết</th>
				<th scope="col">Chỉnh sửa</th>
			</tr>
		</thead>
		<tbody>
			@for (int i = 0; i < listChuyenNganhHeps.Count(); i++)
			{
				var item = listChuyenNganhHeps[i];
				<tr>
					<th scope="row">@(i+1)</th>
					<td>@item.TenChuyenNganh</td>
					<td>@listChuyenNganhMonHocs.Count(c=>c.IdChuyenNganh==@item.Id)</td>
					<td>@listSinhViens.Count(c=>c.IdChuyenNganh==@item.Id)</td>
					<td><button type="button" class="btn btn-link" @onclick="()=>NavigationChiTietChuyeNganhHep(item.Id)">Chi tiết chuyên ngành</button></td>
					<td><button type="button" class="btn btn-danger" @onclick="()=>OnDeleteChuyenNganh(item.Id)">Xóa</button></td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	[Parameter]
	public string idChuyenNganh { get; set; }

	//Inject Repo cua ChuyenNganh
	[Inject] private IChuyenNganhRepo chuyenNganhRepo { set; get; }

	//Khai bao ra listChuyenNganh
	private List<ChuyenNganhVM> listChuyenNganhs;

	//Khai bao ra listChuyenNganh
	private List<ChuyenNganhVM> listChuyenNganhHeps;

	private ChuyenNganhSearchVM searchVM = new ChuyenNganhSearchVM();

	//lay listChuyenNganhMonHoc
	//Inject Repo cua ChuyenNganh
	[Inject] private IChuyenNganhMonHocRepos ChuyenNganhMonHocRepo { set; get; }
	private List<ChuyenNganhMonHocVM> listChuyenNganhMonHocs;

	//SinhVien
	[Inject] private ISinhVienRepo sinhVienRepo { set; get; }
	private List<SinhVienVM> listSinhViens;
	private SinhVienSearchVM searchSV = new SinhVienSearchVM();


	private ChuyenNganhMonHocSearchVM searchCNMHVM = new ChuyenNganhMonHocSearchVM();

	[Inject] private NavigationManager navigationManager { get; set; }

	//Su dung cho Update
	private ChuyenNganhUpdateVM updateVm;

	private Guid idDaoTao { set; get; }


	protected override async Task OnInitializedAsync()
	{
		//idDaoTao = "9d01fb1f-6d12-4b11-9962-871c333e659b";
		await LoadData();
		await LoadDataUpdate();
	}

	private async Task LoadData()
	{
		listChuyenNganhs = await chuyenNganhRepo.GetAllActiveAsync(searchVM);
		listChuyenNganhs = listChuyenNganhs.Where(c => c.IdDaoTao == idDaoTao).ToList();
		//lay ra list chuyenNganhMH
		listChuyenNganhMonHocs = await ChuyenNganhMonHocRepo.GetAllActiveAsync(searchCNMHVM);
		//lay ra list chuyenNganhHep
		listChuyenNganhHeps = await chuyenNganhRepo.GetChuyenNganhHepByIdAsync(Guid.Parse(idChuyenNganh));
		var chuyenNganh = await chuyenNganhRepo.GetByIdAsync(Guid.Parse(idChuyenNganh));
		idDaoTao = chuyenNganh.IdDaoTao;

		listChuyenNganhs = listChuyenNganhs.Where(c => c.IdDaoTao == idDaoTao).ToList();

		listSinhViens = await sinhVienRepo.GetAllActiveAsync(searchSV);
	}

	//Khi chọn xóa CN thì chuyển trạng thái
	public async Task OnDeleteChuyenNganh(Guid deleteId)
	{
		await chuyenNganhRepo.RemoveAsync(deleteId);
		await LoadData();
	}

	//Gọi đến chi tiết chuyên ngành hẹp
	private void NavigationChiTietChuyeNganhHep(Guid idChuyenNganhHep)
	{
		navigationManager.NavigateTo($"/chuyennganhhep/chitiet/{idChuyenNganh}/{idChuyenNganhHep}");
	}

	//LoadData khi đến trang chỉnh sửa
	private async Task LoadDataUpdate()
	{
		var chuyenNganh = await chuyenNganhRepo.GetByIdAsync(Guid.Parse(idChuyenNganh));

		updateVm = new ChuyenNganhUpdateVM();
		updateVm.Ma = chuyenNganh.Ma;
		updateVm.TenChuyenNganh = chuyenNganh.TenChuyenNganh;
		updateVm.IdChuyenNganh = chuyenNganh.IdChuyenNganh;
		updateVm.TrangThai = chuyenNganh.TrangThai;
		updateVm.DuongDanAnh = chuyenNganh.DuongDanAnh;
	}

	//UpdateChuyenNganh
	private async Task UpdateCN(Guid idChuyenNganh, ChuyenNganhUpdateVM updateVm)
	{
		await chuyenNganhRepo.UpdateAsync(idChuyenNganh, updateVm);
		await LoadData();
	}

	//gọi đến thêm CNH
	private void NavigationThemMoiCNH()
	{
		navigationManager.NavigateTo($"/chuyennganh/themmoichuyennganhhep/{idChuyenNganh}");
	}
}
