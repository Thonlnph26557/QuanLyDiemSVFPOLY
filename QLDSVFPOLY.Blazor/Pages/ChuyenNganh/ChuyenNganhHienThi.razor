@page "/chuyennganh/hienthi/{idDaoTao}"
@using QLDSVFPOLY.BUS.ViewModels.ChuyenNganhMonHoc
@using QLDSVFPOLY.Blazor.Repository.Interfaces;
@using QLDSVFPOLY.Blazor.Components;
@using QLDSVFPOLY.BUS.ViewModels.SinhVien;
@using QLDSVFPOLY.BUS.ViewModels.ChuyenNganh;
@inject IConfiguration Configuration

<div>
	<h1 style="float:left">Danh Sách Chuyên Ngành</h1>
	<button type="button" class="btn btn-primary" style="float: right; margin-right:40px" @onclick="()=>NavigationThemMoi()">Thêm Chuyên Ngành</button>
</div>

@if (listChuyenNganhs == null || listChuyenNganhMonHocs == null || listSinhViens ==null)
{
		<LoadingIndicator></LoadingIndicator>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th scope="col">STT</th>
				<th scope="col">Tên</th>
				<th scope="col">Tổng số môn học</th>
				<th scope="col">Tổng số sinh viên</th>
				<th scope="col">Chỉnh sửa</th>
				<th scope="col">Xóa</th>
			</tr>
		</thead>
		<tbody>
			@for (int i = 0; i < listChuyenNganhs.Count(); i++)
			{
				var item = listChuyenNganhs[i];
				<tr>
					<th scope="row">@(i+1)</th>
					<td>@item.TenChuyenNganh</td>
					<td>@listChuyenNganhMonHocs.Count(c=>c.IdChuyenNganh==@item.Id)</td>
					<td>@listSinhViens.Count(c=>c.IdChuyenNganh==@item.Id)</td>
					<td><button type="button" class="btn btn-link" @onclick="()=>NavigationChiTiet(item.Id)">Chi tiết chuyên ngành</button></td>
					<td><button type="button" class="btn btn-danger" @onclick="()=>OnDeleteChuyenNganh(item.Id)">Xóa</button></td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	    [Parameter]
        public string idDaoTao { get; set; }


        //Inject Repo cua ChuyenNganh
        [Inject] private IChuyenNganhRepo ChuyenNganhRepos { set; get; }

        //Khai bao ra listChuyenNganh
        private List<ChuyenNganhVM> listChuyenNganhs;

        private ChuyenNganhSearchVM searchVM = new ChuyenNganhSearchVM();

        //lay listChuyenNganhMonHoc
        [Inject] private IChuyenNganhMonHocRepos ChuyenNganhMonHocRepo { set; get; }

        //Khai bao ra listChuyenNganh
        private List<ChuyenNganhMonHocVM> listChuyenNganhMonHocs;

        private ChuyenNganhMonHocSearchVM searchCNMHVM = new ChuyenNganhMonHocSearchVM();

        //SinhVien
        [Inject] private ISinhVienRepo sinhVienRepo { set; get; }

        //Khai bao ra listChuyenNganh
        private List<SinhVienVM> listSinhViens;

        private SinhVienSearchVM searchSV = new SinhVienSearchVM();

        [Inject] private NavigationManager navigationManager { get; set; }


        protected override async Task OnInitializedAsync()
        {
            idDaoTao = "9d01fb1f-6d12-4b11-9962-871c333e659b";
            await LoadData();
        }

        private async Task LoadData()
        {
            listChuyenNganhs = await ChuyenNganhRepos.GetAllActiveAsync(searchVM);
            listChuyenNganhs = listChuyenNganhs.Where(c => c.IdDaoTao == Guid.Parse(idDaoTao)).ToList();
            //lay ra list chuyenNganhMH
            listChuyenNganhMonHocs = await ChuyenNganhMonHocRepo.GetAllActiveAsync(searchCNMHVM);
            //SinhVien
            listSinhViens = await sinhVienRepo.GetAllActiveAsync(searchSV);
            //listSinhViens = listSinhViens.Where(c => c.IdChuyenNganh == Guid.Parse(idDaoTao)).ToList();
        }

        public async Task OnDeleteChuyenNganh(Guid deleteId)
        {
            await ChuyenNganhRepos.RemoveAsync(deleteId);
            await LoadData();
        }

        private void NavigationChiTiet(Guid idChuyenNganh)
        {
            navigationManager.NavigateTo($"/chuyennganh/chitiet/{idChuyenNganh}");
        }

        private void NavigationThemMoi()
        {
            navigationManager.NavigateTo($"/chuyennganh/themmoi/{idDaoTao}");
        }
}


